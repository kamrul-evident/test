class user(models.Model):
    id=models.UUIDField(primary_key=True, default=uuid.uuid4, max_length=36)
    email=models.EmailField(unique=True)
    password=models.CharField(max_length=255)
    firstname=models.CharField(max_length=255, blank=True)
    lastname=models.CharField(max_length=255, blank= True)
    address=models.CharField(max_length=255, blank= True)
    validation_code=models.CharField(max_length=255)
    mfa_status = models.BooleanField(default=False)
    mfa_code = models.CharField(max_length=6, null=True)
    mfa_code_expires_at = models.BigIntegerField(null=True)
    verified=models.BooleanField(default=False)
    avater_url=models.CharField(max_length=255, blank=True)
    createdAt = models.DateTimeField(auto_now=False, auto_now_add=True)
    updatedAt = models.DateTimeField(auto_now=True, auto_now_add=False)

 
    def get_user_meta_data(self):
        url =  IDENTIFICATION_URL+ "/api/v1/get-user/meta/details/{}/".format(self.id)

        headers = {"Content-Type": "application/json"}

        response = requests.request("GET", url, headers=headers)
        response_data = response.json()
        return response_data

    def delete(self, *args, **kwargs):
            url = f"{IDENTIFICATION_URL}/api/v1/get-user/meta/delete/{str(self.id)}/"
            headers = {"Content-Type": "application/json"}

            try:
                response = requests.delete(url, headers=headers)
                response.raise_for_status()
            except requests.RequestException as e:
                print("Failed to delete user from identification service:", e)
            
            super().delete(*args, **kwargs)

class login_sessions(models.Model):
    email=models.EmailField()
    access_token=models.TextField()
    refresh_token=models.TextField()
    is_invalidated=models.BooleanField()
    logged_in_at=models.DateTimeField(auto_now=False, auto_now_add=False)
    createdAt = models.DateTimeField(auto_now=False, auto_now_add=True)
    updatedAt = models.DateTimeField(auto_now=True, auto_now_add=False)
